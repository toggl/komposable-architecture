import com.toggl.komposable.buildsrc.Libs

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def composeVersion = "1.0.1"

kapt {
    correctErrorTypes = true
    useBuildCache = true
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.toggl.komposable.sample.todo"
        minSdk 26
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion composeVersion
    }
}

dependencies {
    implementation project(':komposable-architecture')

    implementation Libs.Kotlin.stdlib

    implementation Libs.AndroidX.appcompat
    implementation Libs.AndroidX.Activity.activityCompose
    implementation Libs.AndroidX.Activity.activityKtx
    implementation Libs.AndroidX.Compose.runtime
    implementation Libs.AndroidX.Compose.compiler
    implementation Libs.AndroidX.Compose.animation
    implementation Libs.AndroidX.Compose.UI.core
    implementation Libs.AndroidX.Compose.UI.tooling
    implementation Libs.AndroidX.Compose.Material.icons
    implementation Libs.AndroidX.Compose.Material.core
    implementation Libs.AndroidX.Compose.Material.ripple
    implementation Libs.AndroidX.Compose.Foundation.core
    implementation Libs.AndroidX.Compose.Foundation.layout
    implementation Libs.Google.material
    implementation Libs.AndroidX.Hilt.work
    implementation Libs.AndroidX.Lifecycle.runtime
    kapt Libs.AndroidX.Hilt.compiler
    implementation Libs.Hilt.hilt
    kapt Libs.Hilt.compiler

    debugImplementation Libs.leakCanary
}